name: CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Log in to Docker Hub
      #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # - name: Build Docker image
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/book-store-server:latest .

      # - name: Push Docker image
      #   run: |
      #     docker push ${{ secrets.DOCKER_USERNAME }}/book-store-server:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build-and-push # ensures it waits for the first job to finish

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # - name: Deploy to VPS via SSH
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: root
      #     password: ${{ secrets.VPS_PASSWORD }}
      #     script: |
      #       docker compose down --remove-orphans
      #       docker compose rm -f
      #       docker compose pull
      #       docker compose up -d
      #       docker image prune -f

      # - name: Reset DB inside container (TEMPORARY)
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: root
      #     password: ${{ secrets.VPS_PASSWORD }}
      #     script: |
      #       docker compose down
      #       docker compose rm -f
      #       docker volume rm $(docker volume ls -qf dangling=true)
      #       docker compose up -d
      #       sleep 20
      #       docker exec jesus-server-api npx prisma migrate reset --force --skip-generate --skip-seed
